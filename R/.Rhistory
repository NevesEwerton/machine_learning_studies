theme_bw() +
labs(
title = "Model Accuracy by Cutoff",
subtitle = "As you can see the accuracy reach its maximum at 64 cutoff. After that, the accuracy drop as the cutoff increases.",
y= "Accuracy",
x = "Cutoff"
)
data.frame(cutoff, accuracy) %>%
ggplot(aes(cutoff, accuracy)) +
geom_point() +
geom_line() +
theme_bw() +
labs(
title = "Model Accuracy by Cutoff",
subtitle = "As you can observe, the accuracy reaches its peak at a cutoff of 64.
Beyond this optimal cutoff level, accuracy starts to decline as the cutoff increases.",
y= "Accuracy",
x = "Cutoff"
)
data.frame(cutoff, accuracy) %>%
ggplot(aes(cutoff, accuracy)) +
geom_point() +
geom_line() +
theme_bw() +
labs(
title = "Model Accuracy by Cutoff",
subtitle = "As you can observe, the accuracy reaches its peak at a cutoff of 64.
Beyond this optimal cutoff level, accuracy starts to decline as the cutoff increases.",
y= "Accuracy",
x = "Cutoff"
) +
theme(
legend.position = "none",
plot.title = element_textbox_simple(face = "bold"),
plot.subtitle = element_textbox_simple(margin = margin(t = 10), lineheight = 1.5),
plot.title.position = "plot",
plot.margin = margin(15,10,10,15),
#panel.grid = element_blank(),
panel.grid.major = element_line(colour = "#FDD49E", linetype = "dashed"),
# panel.border = element_rect(colour = "#FDD49E"),
panel.background = element_rect(colour = "#FDD49E", fill = "#FFF7EC"),
axis.text.x = element_blank(),
# mudando a cor do fundo do gráfico
plot.background = element_rect(fill =   "#FFF7EC"),
# mudando a cor de fundo dos eixos
strip.background = element_rect(fill =   "#FFF7EC")
)
library(showtext)
data.frame(cutoff, accuracy) %>%
ggplot(aes(cutoff, accuracy)) +
geom_point() +
geom_line() +
theme_bw() +
labs(
title = "Model Accuracy by Cutoff",
subtitle = "As you can observe, the accuracy reaches its peak at a cutoff of 64.
Beyond this optimal cutoff level, accuracy starts to decline as the cutoff increases.",
y= "Accuracy",
x = "Cutoff"
) +
theme(
legend.position = "none",
plot.title = element_textbox_simple(face = "bold"),
plot.subtitle = element_textbox_simple(margin = margin(t = 10), lineheight = 1.5),
plot.title.position = "plot",
plot.margin = margin(15,10,10,15),
#panel.grid = element_blank(),
panel.grid.major = element_line(colour = "#FDD49E", linetype = "dashed"),
# panel.border = element_rect(colour = "#FDD49E"),
panel.background = element_rect(colour = "#FDD49E", fill = "#FFF7EC"),
axis.text.x = element_blank(),
# mudando a cor do fundo do gráfico
plot.background = element_rect(fill =   "#FFF7EC"),
# mudando a cor de fundo dos eixos
strip.background = element_rect(fill =   "#FFF7EC")
)
library(ggthemr)
ggthemr("dust", text_size = 20)
font_add_google("Chakra Petch")
showtext_auto()
data.frame(cutoff, accuracy) %>%
ggplot(aes(cutoff, accuracy)) +
geom_point() +
geom_line() +
theme_bw() +
labs(
title = "Model Accuracy by Cutoff",
subtitle = "As you can observe, the accuracy reaches its peak at a cutoff of 64.
Beyond this optimal cutoff level, accuracy starts to decline as the cutoff increases.",
y= "Accuracy",
x = "Cutoff"
) +
theme(
legend.position = "none",
plot.title = element_textbox_simple(face = "bold"),
plot.subtitle = element_textbox_simple(margin = margin(t = 10), lineheight = 1.5),
plot.title.position = "plot",
plot.margin = margin(15,10,10,15),
#panel.grid = element_blank(),
panel.grid.major = element_line(colour = "#FDD49E", linetype = "dashed"),
# panel.border = element_rect(colour = "#FDD49E"),
panel.background = element_rect(colour = "#FDD49E", fill = "#FFF7EC"),
axis.text.x = element_blank(),
# mudando a cor do fundo do gráfico
plot.background = element_rect(fill =   "#FFF7EC"),
# mudando a cor de fundo dos eixos
strip.background = element_rect(fill =   "#FFF7EC")
)
data.frame(cutoff, accuracy) %>%
ggplot(aes(cutoff, accuracy)) +
geom_point() +
geom_line() +
theme_bw() +
labs(
title = "Model Accuracy by Cutoff",
subtitle = "As you can observe, the accuracy reaches its peak at a cutoff of 64.
Beyond this optimal cutoff level, accuracy starts to decline as the cutoff increases.",
y= "Accuracy",
x = "Cutoff"
) +
theme(
legend.position = "none",
#plot.title = element_textbox_simple(face = "bold"),
plot.subtitle = element_textbox_simple(margin = margin(t = 10), lineheight = 1.5),
plot.title.position = "plot",
plot.margin = margin(15,10,10,15),
#panel.grid = element_blank(),
panel.grid.major = element_line(colour = "#FDD49E", linetype = "dashed"),
# panel.border = element_rect(colour = "#FDD49E"),
panel.background = element_rect(colour = "#FDD49E", fill = "#FFF7EC"),
axis.text.x = element_blank(),
# mudando a cor do fundo do gráfico
plot.background = element_rect(fill =   "#FFF7EC"),
# mudando a cor de fundo dos eixos
strip.background = element_rect(fill =   "#FFF7EC")
)
data.frame(cutoff, accuracy) %>%
ggplot(aes(cutoff, accuracy)) +
geom_point() +
geom_line() +
theme_bw() +
labs(
title = "Model Accuracy by Cutoff",
subtitle = "As you can observe, the accuracy reaches its peak at a cutoff of 64.
Beyond this optimal cutoff level, accuracy starts to decline as the cutoff increases.",
y= "Accuracy",
x = "Cutoff"
) +
theme(
legend.position = "none",
#plot.title = element_textbox_simple(face = "bold"),
# plot.subtitle = element_textbox_simple(margin = margin(t = 10), lineheight = 1.5),
plot.title.position = "plot",
plot.margin = margin(15,10,10,15),
#panel.grid = element_blank(),
panel.grid.major = element_line(colour = "#FDD49E", linetype = "dashed"),
# panel.border = element_rect(colour = "#FDD49E"),
panel.background = element_rect(colour = "#FDD49E", fill = "#FFF7EC"),
axis.text.x = element_blank(),
# mudando a cor do fundo do gráfico
plot.background = element_rect(fill =   "#FFF7EC"),
# mudando a cor de fundo dos eixos
strip.background = element_rect(fill =   "#FFF7EC")
)
data.frame(cutoff, accuracy) %>%
ggplot(aes(cutoff, accuracy)) +
geom_point() +
geom_line() +
theme_bw(base_size = 14) +
labs(
title = "Model Accuracy by Cutoff",
subtitle = "As you can observe, the accuracy reaches its peak at a cutoff of 64.
Beyond this optimal cutoff level, accuracy starts to decline as the cutoff increases.",
y= "Accuracy",
x = "Cutoff"
) +
theme(
legend.position = "none",
#plot.title = element_textbox_simple(face = "bold"),
# plot.subtitle = element_textbox_simple(margin = margin(t = 10), lineheight = 1.5),
plot.title.position = "plot",
plot.margin = margin(15,10,10,15),
#panel.grid = element_blank(),
panel.grid.major = element_line(colour = "#FDD49E", linetype = "dashed"),
# panel.border = element_rect(colour = "#FDD49E"),
panel.background = element_rect(colour = "#FDD49E", fill = "#FFF7EC"),
axis.text.x = element_blank(),
# mudando a cor do fundo do gráfico
plot.background = element_rect(fill =   "#FFF7EC"),
# mudando a cor de fundo dos eixos
strip.background = element_rect(fill =   "#FFF7EC")
)
data.frame(cutoff, accuracy) %>%
ggplot(aes(cutoff, accuracy)) +
geom_point() +
geom_line() +
theme_bw(base_size = 14) +
geom_text(
mapping = aes(label = round(len, 0)),
position = position_dodge(width = 0.7),
hjust = 1.5,
size = 6,
fontface = "bold",
colour = "white"
) +
labs(
title = "Model Accuracy by Cutoff",
subtitle = "As you can observe, the accuracy reaches its peak at a cutoff of 64.
Beyond this optimal cutoff level, accuracy starts to decline as the cutoff increases.",
y= "Accuracy",
x = "Cutoff"
) +
theme(
legend.position = "none",
#plot.title = element_textbox_simple(face = "bold"),
# plot.subtitle = element_textbox_simple(margin = margin(t = 10), lineheight = 1.5),
plot.title.position = "plot",
plot.margin = margin(15,10,10,15),
#panel.grid = element_blank(),
panel.grid.major = element_line(colour = "#FDD49E", linetype = "dashed"),
# panel.border = element_rect(colour = "#FDD49E"),
panel.background = element_rect(colour = "#FDD49E", fill = "#FFF7EC"),
axis.text.x = element_blank(),
# mudando a cor do fundo do gráfico
plot.background = element_rect(fill =   "#FFF7EC"),
# mudando a cor de fundo dos eixos
strip.background = element_rect(fill =   "#FFF7EC")
)
data.frame(cutoff, accuracy) %>%
ggplot(aes(cutoff, accuracy)) +
geom_point() +
geom_line() +
theme_bw(base_size = 14) +
geom_text(
mapping = aes(label = round(len, 0)),
position = position_dodge(width = 0.7),
hjust = 1.5,
size = 6,
fontface = "bold",
colour = "white"
)
data.frame(cutoff, accuracy) %>%
ggplot(aes(cutoff, accuracy)) +
geom_point() +
geom_line() +
theme_bw(base_size = 14) +
labs(
title = "Model Accuracy by Cutoff",
subtitle = "As you can observe, the accuracy reaches its peak at a cutoff of 64.
Beyond this optimal cutoff level, accuracy starts to decline as the cutoff increases.",
y= "Accuracy",
x = "Cutoff"
) +
theme(
legend.position = "none",
#plot.title = element_textbox_simple(face = "bold"),
# plot.subtitle = element_textbox_simple(margin = margin(t = 10), lineheight = 1.5),
plot.title.position = "plot",
plot.margin = margin(15,10,10,15),
#panel.grid = element_blank(),
panel.grid.major = element_line(colour = "#FDD49E", linetype = "dashed"),
# panel.border = element_rect(colour = "#FDD49E"),
panel.background = element_rect(colour = "#FDD49E", fill = "#FFF7EC"),
axis.text.x = element_blank(),
# mudando a cor do fundo do gráfico
plot.background = element_rect(fill =   "#FFF7EC"),
# mudando a cor de fundo dos eixos
strip.background = element_rect(fill =   "#FFF7EC")
)
plot_data <- ToothGrowth %>%
mutate(dose = factor(dose)) %>%
group_by(dose, supp) %>%
summarise(len = mean(len)) %>%
ungroup()
ggplot(
data = plot_data,
mapping = aes(x = len, y = dose, fill = supp)
) +
geom_col(position = position_dodge(width = 0.7),
width = 0.7) +
scale_x_continuous(
limits = c(0,30),
name = "Tooth Length"
) +
geom_text(
mapping = aes(label = round(len, 0)),
position = position_dodge(width = 0.7),
hjust = 1.5,
size = 6,
fontface = "bold",
colour = "white"
) +
scale_fill_manual(values = c("#9B1D20","#3D5A80"))+
labs(
title = "Tooth Growth",
subtitle = "Each of 60 guinea pigs received one of three dose levels of vitamin C
(0.5, 1, and 2 mg/day) by one of two delivery methods: <span style='color: #9B1D20'>**orange juice**</span> or
<span style='color: #3D5A80'>**acorbic acid**</span>.",
y = "Dosage (mg/day)"
) +
theme_minimal(base_size = 14) +
#theme_bw() +
theme(
legend.position = "none",
plot.title = element_textbox_simple(face = "bold"),
plot.subtitle = element_textbox_simple(margin = margin(t = 10), lineheight = 1.5),
plot.title.position = "plot",
plot.margin = margin(15,10,10,15),
#panel.grid = element_blank(),
panel.grid.major = element_line(colour = "#FDD49E", linetype = "dashed"),
# panel.border = element_rect(colour = "#FDD49E"),
panel.background = element_rect(colour = "#FDD49E", fill = "#FFF7EC"),
axis.text.x = element_blank(),
# mudando a cor do fundo do gráfico
plot.background = element_rect(fill =   "#FFF7EC"),
# mudando a cor de fundo dos eixos
strip.background = element_rect(fill =   "#FFF7EC")
)
library(gcookbook) # For the data set
library(showtext)
library(ggthemr)
plot_data <- ToothGrowth %>%
mutate(dose = factor(dose)) %>%
group_by(dose, supp) %>%
summarise(len = mean(len)) %>%
ungroup()
ggplot(
data = plot_data,
mapping = aes(x = len, y = dose, fill = supp)
) +
geom_col(position = position_dodge(width = 0.7),
width = 0.7) +
scale_x_continuous(
limits = c(0,30),
name = "Tooth Length"
) +
geom_text(
mapping = aes(label = round(len, 0)),
position = position_dodge(width = 0.7),
hjust = 1.5,
size = 6,
fontface = "bold",
colour = "white"
) +
scale_fill_manual(values = c("#9B1D20","#3D5A80"))+
labs(
title = "Tooth Growth",
subtitle = "Each of 60 guinea pigs received one of three dose levels of vitamin C
(0.5, 1, and 2 mg/day) by one of two delivery methods: <span style='color: #9B1D20'>**orange juice**</span> or
<span style='color: #3D5A80'>**acorbic acid**</span>.",
y = "Dosage (mg/day)"
) +
theme_minimal(base_size = 14) +
#theme_bw() +
theme(
legend.position = "none",
plot.title = element_textbox_simple(face = "bold"),
plot.subtitle = element_textbox_simple(margin = margin(t = 10), lineheight = 1.5),
plot.title.position = "plot",
plot.margin = margin(15,10,10,15),
#panel.grid = element_blank(),
panel.grid.major = element_line(colour = "#FDD49E", linetype = "dashed"),
# panel.border = element_rect(colour = "#FDD49E"),
panel.background = element_rect(colour = "#FDD49E", fill = "#FFF7EC"),
axis.text.x = element_blank(),
# mudando a cor do fundo do gráfico
plot.background = element_rect(fill =   "#FFF7EC"),
# mudando a cor de fundo dos eixos
strip.background = element_rect(fill =   "#FFF7EC")
)
read_mnist()
mnist
View(mnist_27)
mnist_27
ncol(mnist_27)
mnist <- read_mnist()
ncol(mnist)
mnist <- read_mnist(download = TRUE, destdir = "~/Downloads")
mnist <- read_mnist(download = TRUE)
ncol(mnist)
mnist$train
ncol(mnist$train)
mnist$train$labels
ncol(mnist$train$labels)
mnist$test$labels
library(tidyverse)
library(caret)
library(dslabs)
ifelse(x > 62, "Male", "Female") %>% factor(levels = levels(test_set$sex))
ifelse(x > 62, "Male", "Female")
test_set$sex
ifelse(x > 62, "Male", "Female") %>% factor(levels = levels(test_set$sex))
mean(y == y_hat)
table(predicted = y_hat, actual = test_set$sex)
test_set %>%
mutate(y_hat = y_hat) %>%
group_by(sex) %>%
summarize(accuracy = mean(y_hat == sex))
prev <- mean(y == "Male")
confusionMatrix(data = y_hat, reference = test_set$sex)
# maximize F-score
cutoff <- seq(61, 70)
F_1 <- map_dbl(cutoff, function(x){
y_hat <- ifelse(train_set$height > x, "Male", "Female") %>%
factor(levels = levels(test_set$sex))
F_meas(data = y_hat, reference = factor(train_set$sex))
})
library(tidyverse)
library(caret)
library(dslabs)
F_meas(data = y_hat, reference = factor(train_set$sex))
# maximize F-score
cutoff <- seq(61, 70)
F_1 <- map_dbl(cutoff, function(x){
y_hat <- ifelse(train_set$height > x, "Male", "Female") %>%
factor(levels = levels(test_set$sex))
F_meas(data = y_hat, reference = factor(train_set$sex))
})
data.frame(cutoff, F_1) %>%
ggplot(aes(cutoff, F_1)) +
geom_point() +
geom_line()
max(F_1)
best_cutoff_2 <- cutoff[which.max(F_1)]
best_cutoff_2
y_hat <- ifelse(test_set$height > best_cutoff_2, "Male", "Female") %>%
factor(levels = levels(test_set$sex))
sensitivity(data = y_hat, reference = test_set$sex)
specificity(data = y_hat, reference = test_set$sex)
p <- 0.9
n <- length(test_index)
y_hat <- sample(c("Male", "Female"), n, replace = TRUE, prob=c(p, 1-p)) %>%
factor(levels = levels(test_set$sex))
mean(y_hat == test_set$sex)
# ROC curve
probs <- seq(0, 1, length.out = 10)
guessing <- map_df(probs, function(p){
y_hat <-
sample(c("Male", "Female"), n, replace = TRUE, prob=c(p, 1-p)) %>%
factor(levels = c("Female", "Male"))
list(method = "Guessing",
FPR = 1 - specificity(y_hat, test_set$sex),
TPR = sensitivity(y_hat, test_set$sex))
})
guessing %>% qplot(FPR, TPR, data =., xlab = "1 - Specificity", ylab = "Sensitivity")
cutoffs <- c(50, seq(60, 75), 80)
height_cutoff <- map_df(cutoffs, function(x){
y_hat <- ifelse(test_set$height > x, "Male", "Female") %>%
factor(levels = c("Female", "Male"))
list(method = "Height cutoff",
FPR = 1-specificity(y_hat, test_set$sex),
TPR = sensitivity(y_hat, test_set$sex))
})
# plot both curves together
bind_rows(guessing, height_cutoff) %>%
ggplot(aes(FPR, TPR, color = method)) +
geom_line() +
geom_point() +
xlab("1 - Specificity") +
ylab("Sensitivity")
library(ggrepel)
map_df(cutoffs, function(x){
y_hat <- ifelse(test_set$height > x, "Male", "Female") %>%
factor(levels = c("Female", "Male"))
list(method = "Height cutoff",
cutoff = x,
FPR = 1-specificity(y_hat, test_set$sex),
TPR = sensitivity(y_hat, test_set$sex))
}) %>%
ggplot(aes(FPR, TPR, label = cutoff)) +
geom_line() +
geom_point() +
geom_text_repel(nudge_x = 0.01, nudge_y = -0.01)
# plot precision against recall
guessing <- map_df(probs, function(p){
y_hat <- sample(c("Male", "Female"), length(test_index),
replace = TRUE, prob=c(p, 1-p)) %>%
factor(levels = c("Female", "Male"))
list(method = "Guess",
recall = sensitivity(y_hat, test_set$sex),
precision = precision(y_hat, test_set$sex))
})
height_cutoff <- map_df(cutoffs, function(x){
y_hat <- ifelse(test_set$height > x, "Male", "Female") %>%
factor(levels = c("Female", "Male"))
list(method = "Height cutoff",
recall = sensitivity(y_hat, test_set$sex),
precision = precision(y_hat, test_set$sex))
})
bind_rows(guessing, height_cutoff) %>%
ggplot(aes(recall, precision, color = method)) +
geom_line() +
geom_point()
guessing <- map_df(probs, function(p){
y_hat <- sample(c("Male", "Female"), length(test_index), replace = TRUE,
prob=c(p, 1-p)) %>%
factor(levels = c("Male", "Female"))
list(method = "Guess",
recall = sensitivity(y_hat, relevel(test_set$sex, "Male", "Female")),
precision = precision(y_hat, relevel(test_set$sex, "Male", "Female")))
})
height_cutoff <- map_df(cutoffs, function(x){
y_hat <- ifelse(test_set$height > x, "Male", "Female") %>%
factor(levels = c("Male", "Female"))
list(method = "Height cutoff",
recall = sensitivity(y_hat, relevel(test_set$sex, "Male", "Female")),
precision = precision(y_hat, relevel(test_set$sex, "Male", "Female")))
})
bind_rows(guessing, height_cutoff) %>%
ggplot(aes(recall, precision, color = method)) +
geom_line() +
geom_point()
